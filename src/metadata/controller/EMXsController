{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "EMXsController"
    },
    "designerId": "e3282f86-3944-46c9-a9f6-339833db34db",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onListSelect",
                "fn": "onListSelect",
                "implHandler": [
                    "var exercise = Ext.create('HEART.view.' + record.get(\"type\"));",
                    "exercise.record_data = record;",
                    "var type = record.get(\"type\");",
                    "var find = type.indexOf('Reflection')>=0||type.indexOf('Audio')>=0",
                    "",
                    "if(find&&Math.random()<AJAX.probability){",
                    "\tvar field = exercise.child('fieldset');",
                    "\tfield.child('#pre-slider').destroy();",
                    "\tfield.child('#post-slider').destroy();",
                    "}",
                    "",
                    "exercise.goola = 'exercises';",
                    "",
                    "this.getExercises().push(exercise);"
                ],
                "name": "select",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "#exerciseList"
            },
            "designerId": "e6598e40-fef6-4bbf-b6fb-acad809e58de"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "launch",
                "fn": "launch",
                "implHandler": [
                    "this.getExercises().getNavigationBar().hide();",
                    "this.getStressed().getNavigationBar().hide();"
                ]
            },
            "designerId": "dd4da508-1f77-48bf-bffe-c6833c62e462"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "exercises",
                "ref": "exercises",
                "selector": "#exercises"
            },
            "designerId": "bc7a5445-3930-4933-8929-f59f46701fd5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onExercisesHide",
                "fn": "onExercisesHide",
                "implHandler": [
                    "this.getExercises().pop();",
                    "this.getExercises().child('dataview').deselectAll();"
                ],
                "name": "hide",
                "designer|targetType": "Ext.navigation.View",
                "designer|controlQuery": "#exercises"
            },
            "designerId": "9910458a-ad91-49e4-a7f7-03e4f9c9ff91"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "stressed",
                "ref": "stressed",
                "selector": "#stressed"
            },
            "designerId": "380bf61c-189c-459b-9819-b72f47a31cf9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onStressedShow",
                "fn": "onStressedShow",
                "implHandler": [
                    "var EMXs = Ext.getStore('EMXs');",
                    "var count = EMXs.getAllCount();",
                    "",
                    "var index = Math.floor(count*Math.random());",
                    "var emx = EMXs.getAt(index);",
                    "",
                    "var exercise = Ext.create('HEART.view.' + emx.get(\"type\"));",
                    "",
                    "exercise.record_data = emx;",
                    "exercise.goola = 'stressed';",
                    "",
                    "this.getStressed().push(exercise);"
                ],
                "name": "show",
                "designer|targetType": "Ext.navigation.View",
                "designer|controlQuery": "#stressed"
            },
            "designerId": "ab72d431-16a4-43ab-88f3-0cfb5483fa3d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onStressedHide",
                "fn": "onStressedHide",
                "implHandler": [
                    "this.getStressed().pop();"
                ],
                "name": "hide",
                "designer|targetType": "Ext.navigation.View",
                "designer|controlQuery": "#stressed"
            },
            "designerId": "1fa47330-c437-4bfd-93a2-9c8d15ff4fdf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onExerciseDone",
                "fn": "onExerciseDone",
                "implHandler": [
                    "var form = button.parent.parent;",
                    "var values = form.getValues();",
                    "var content = values;",
                    "",
                    "var type = form.record_data.get('type');",
                    "var uuid = AJAX.uuid;",
                    "",
                    "content.type = type;",
                    "content.user = uuid;",
                    "",
                    "var succ = function(response) {",
                    "\tExt.Msg.alert(':)', \"<div align='center'>Data Submitted</div>\", Ext.emptyFn);",
                    "};",
                    "",
                    "var fail = function(response) {",
                    "\tExt.Msg.alert(';(', \"<div align='center'>Network Error</div>\", Ext.emptyFn);",
                    "\tvar feeds = Ext.getStore(\"Feeds\");",
                    "\tfeeds.add({timestamp: Date.now(), type: type, data: values, user: uuid});",
                    "\tfeeds.sort(\"timestamp\", 'DESC');\t\t",
                    "\tfeeds.sync();",
                    "};",
                    "",
                    "AJAX.toSensor(content, succ, fail);",
                    "",
                    "content = { uid: AJAX.uuid };",
                    "",
                    "if(type.indexOf('Type')>=0){",
                    "\tif(type.indexOf('1')>=0){",
                    "\t\tcontent.emi_type_1=values.stress;",
                    "\t}else if(type.indexOf('2')>=0){",
                    "\t\tcontent.emi_type_2=values.unpleasantness;",
                    "\t}else if(type.indexOf('3')>=0){",
                    "\t\tcontent.emi_type_3=values.anxiety;\t",
                    "\t}",
                    "\tAJAX.toUser(content);",
                    "}",
                    "",
                    "if(form.goola=='exercises'){",
                    "\tthis.getExercises().pop();",
                    "\tthis.getExercises().child('dataview').deselectAll();",
                    "}else if(form.goola=='stressed'){",
                    "\tthis.getStressed().pop();",
                    "\tthis.getStressed().hide();",
                    "\tthis.getStressed().show();",
                    "}else{",
                    "\tform.destroy();",
                    "}"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button[action=exercise]"
            },
            "designerId": "4e47477b-a5ac-44a6-9e25-8784b2d2a942"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onPreSliderChange",
                "fn": "onPreSliderChange",
                "implHandler": [
                    "Slider.setHideAnimation({type :\"fadeOut\", duration : 256});",
                    "Slider.hide();"
                ],
                "name": "change",
                "designer|targetType": "Ext.field.Slider",
                "designer|controlQuery": "sliderfield[name=pre-slider]"
            },
            "designerId": "d45f4be5-1b58-4b82-b794-d4a3c894ea79"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onPostSliderChange",
                "fn": "onPostSliderChange",
                "implHandler": [
                    "Slider.setHideAnimation({type :\"fadeOut\", duration : 256});",
                    "Slider.hide();"
                ],
                "name": "change",
                "designer|targetType": "Ext.field.Slider",
                "designer|controlQuery": "sliderfield[name=post-slider]"
            },
            "designerId": "b52bf379-6cfa-4c81-8bce-17719749c456"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onEMAInitialize",
                "fn": "onEMAInitialize",
                "implHandler": [
                    "var items = component.getInnerItems();",
                    "",
                    "for(i=1;i<items.length;i++){",
                    "\tcomponent.getAt(i).hide();",
                    "}",
                    "",
                    "var index = 0;",
                    "",
                    "for(i=0; i< items.length; i++){",
                    "\tvar comp = component.getAt(i);",
                    "\tcomp.index = i;",
                    "\tvar onChange = function(){",
                    "",
                    "\t\tthis.setHideAnimation({type :\"fadeOut\", duration : 256});",
                    "\t\tthis.hide(); ",
                    "\t\tvar next = component.getAt(this.index+1);",
                    "",
                    "\t\tnext.setShowAnimation({type :\"fadeIn\", duration : 1024});",
                    "\t\tnext.show();",
                    "\t};",
                    "",
                    "\tcomp.on({ change: onChange });",
                    "}"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.form.FieldSet",
                "designer|controlQuery": "fieldset[goola=ema]"
            },
            "designerId": "9372221e-b368-4ccb-862f-8a3e0dad0bc0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onWriteTap",
                "fn": "onWriteTap",
                "implHandler": [
                    "button.setHideAnimation({type :\"fadeOut\", duration : 256});",
                    "button.hide();",
                    "var textarea = button.parent.child('textareafield')",
                    "textarea.setShowAnimation({type :\"fadeIn\", duration : 768});",
                    "textarea.show();",
                    "",
                    "var post = button.parent.child('#post-slider');",
                    "var done = button.parent.child('button[text=Done]');",
                    "",
                    "if(post!=null){",
                    "\tpost.setShowAnimation({type :\"fadeIn\", duration : 1024});",
                    "\tpost.show();",
                    "}",
                    "",
                    "done.setShowAnimation({type :\"fadeIn\", duration : 1024});",
                    "done.show();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button[text=Write]"
            },
            "designerId": "1c0ebff3-83ed-43e3-bf33-f25730f03e1c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onEMIInitialize",
                "fn": "onEMIInitialize",
                "implHandler": [
                    "var items = component.getInnerItems();",
                    "",
                    "for(i=2;i<items.length;i++){",
                    "\tcomponent.getAt(i).hide();",
                    "}",
                    "",
                    "var index = 0;",
                    "",
                    "for(i=1; i< items.length; i++){",
                    "\tvar comp = component.getAt(i);",
                    "\tcomp.index = i;",
                    "\tvar onChange = function(){",
                    "",
                    "\t\tthis.setHideAnimation({type :\"fadeOut\", duration : 256});",
                    "\t\tthis.hide(); ",
                    "\t\tvar next = component.getAt(this.index+1);",
                    "",
                    "\t\tnext.setShowAnimation({type :\"fadeIn\", duration : 1024});",
                    "\t\tnext.show();",
                    "\t};",
                    "",
                    "\tcomp.on({ change: onChange });",
                    "}"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.form.FieldSet",
                "designer|controlQuery": "fieldset[goola=emi]"
            },
            "designerId": "520222c3-6bb3-47e4-8252-78df62885bb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onAudioInitialize",
                "fn": "onAudioInitialize",
                "implHandler": [
                    "var audio = component.child('#audioPanel');",
                    "var post = component.child('#post-slider');",
                    "var button = component.child('button');",
                    "",
                    "post.hide();",
                    "button.hide();",
                    "",
                    "callback = function() {",
                    "\tvar slider = this.parent.child('#post-slider');",
                    "\tif(slider!=null){",
                    "\t\tslider.show();",
                    "\t}else{",
                    "\t\tbutton.show();",
                    "\t}",
                    "};",
                    "",
                    "audio.on( { ended: callback, stop: callback, pause: callback } );",
                    "",
                    "post.on( { change: function(){ button.show() } } );"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.form.FieldSet",
                "designer|controlQuery": "fieldset[goola=audio]"
            },
            "designerId": "412aeae3-588e-4c8a-94de-857f389ec065"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onReflectionInitialize",
                "fn": "onReflectionInitialize",
                "implHandler": [
                    "var post = component.child('#post-slider');",
                    "var button = component.child('button[text=Done]');",
                    "",
                    "post.hide();",
                    "button.hide();"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.form.FieldSet",
                "designer|controlQuery": "fieldset[goola=reflect]"
            },
            "designerId": "fb3c61e1-76c1-4bd8-bf02-e040eae2ea90"
        }
    ]
}