/*
 * File: app/view/MainTabs.js
 * Date: Tue Apr 16 2013 17:46:05 GMT+0800 (CST)
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HEART.view.MainTabs', {
	extend: 'Ext.tab.Panel',
	alias: 'widget.mainview',

	config: {
		showAnimation: {
			type: 'fadeIn',
			duration: 1024
		},
		items: [
			{
				xtype: 'formpanel',
				title: 'Home',
				iconCls: 'home',
				id: 'homepanel',
				items: [
					{
						xtype: 'image',
						height: 128,
						itemId: 'homeIcon',
						src: 'heart-icon'
					},
					{
						xtype: 'label',
						html: '<center>My intention for this week is:</center>',
						itemId: 'homeTitle'
					},
					{
						xtype: 'button',
						baseCls: 'x-html',
						itemId: 'editIntention',
						iconCls: 'compose',
						iconMask: true,
						text: '<b>press here to set</b>'
					},
					{
						xtype: 'sliderfield',
						itemId: 'homeSlider',
						label: 'Stop and notice your body then your emotions. What are you aware of right now? <br/> (left=overwhelmed, right=balance)',
						labelAlign: 'top',
						labelWrap: true,
						value: [
							50
						]
					},
					{
						xtype: 'button',
						disabled: true,
						itemId: 'homeDone',
						text: 'Done'
					}
				]
			},
			{
				xtype: 'navigationview',
				title: 'I\'m stressed!',
				iconCls: 'user',
				id: 'stressed',
				itemId: 'stressedView'
			},
			{
				xtype: 'navigationview',
				title: 'Exercises',
				iconCls: 'organize',
				id: 'exercises',
				items: [
					{
						xtype: 'list',
						id: 'exerciseList',
						itemTpl: [
							'<div>{title}</div>'
						],
						store: 'EMXs',
						grouped: true
					}
				]
			},
			{
				xtype: 'formpanel',
				title: 'Settings',
				iconCls: 'settings',
				id: 'settings',
				items: [
					{
						xtype: 'textfield',
						itemId: 'firstname',
						label: 'First name',
						labelWidth: '50%',
						name: 'name',
						required: true,
						autoCapitalize: true,
						maxLength: 15
					},
					{
						xtype: 'textfield',
						itemId: 'childName',
						label: 'Child\'s name',
						labelWidth: '50%',
						name: 'child_name',
						required: true,
						autoCapitalize: true,
						maxLength: 15
					},
					{
						xtype: 'textfield',
						itemId: 'wakeTime',
						label: 'Wake-up time',
						labelWidth: '50%',
						name: 'wake_time',
						required: true,
						autoCorrect: false
					},
					{
						xtype: 'textfield',
						itemId: 'sleepTime',
						label: 'Sleep time',
						labelWidth: '50%',
						name: 'sleep_time',
						required: true
					},
					{
						xtype: 'selectfield',
						centered: false,
						itemId: 'gender',
						label: 'Gender',
						name: 'gender',
						required: true,
						placeHolder: 'tap here',
						options: [
							{
								text: 'Male',
								value: 'm'
							},
							{
								text: 'Female',
								value: 'm'
							},
							{
								text: 'Other',
								value: 'o'
							}
						]
					},
					{
						xtype: 'spinnerfield',
						itemId: 'weight',
						label: 'Weight',
						name: 'weight',
						required: true,
						stepValue: 1,
						groupButtons: false,
						increment: 64
					},
					{
						xtype: 'spinnerfield',
						itemId: 'height',
						label: 'Height',
						name: 'height',
						required: true,
						stepValue: 1,
						groupButtons: false,
						increment: 64
					},
					{
						xtype: 'button',
						itemId: 'setNotifications',
						text: 'Set Notification Frequency'
					}
				]
			}
		],
		tabBar: {
			docked: 'bottom',
			ui: 'light'
		}
	},

	initialize: function() {
		this.callParent();

		var user = window.localStorage.getItem('user');
		var settings = this.child('#settings');

		if(user==null){
			this.getTabBar().hide();
			this.setActiveItem(settings);
		}else{
			user = JSON.parse(user);
			settings.setValues(user);
		}
	}

});