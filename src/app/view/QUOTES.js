/*
 * File: app/view/QUOTES.js
 * Date: Thu Jul 18 2013 00:04:31 GMT+0800 (CST)
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HEART.view.QUOTES', {
	extend: 'Ext.form.Panel',

	config: {
		cls: 'quotes',
		layout: {
			type: 'vbox'
		},
		items: [
			{
				xtype: 'container',
				flex: 3,
				itemId: 'content',
				padding: 20,
				items: [
					{
						xtype: 'label',
						html: '<br/><br/><br/>',
						itemId: 'empty'
					},
					{
						xtype: 'label',
						html: 'QUOTES',
						itemId: 'quote',
						listeners: [
							{
								fn: function(component, eOpts) {
									quotes=Ext.getStore('Quotes'); 
									count=quotes.getAllCount();
									quote='This is quote';

									if(this.wrapped){
										for(i=0;i<count;i++){
											text = quotes.getAt(i).data.text;
											if(text.indexOf(this.wrapped)>=0){
												quote=text; break;
											}
										}	
									}else{

										index=Math.ceil(Math.random()*count);

										quote=quotes.getAt(index).data.text;

									}	

									wrapped = '';
									quotewords = quote.split(" ", 10);
									for (var i = 0; i< 10; i++) {
										wrapped += quotewords[i];
										wrapped += " ";
									};
									wrapped+='...';
									component.setHtml(wrapped);

									component.element.on({

										tap : function(e, t){		
											content = {};
											content.type = 'label';
											content.action = 'show-quote';

											HEART.toSensor(content);

											component.setHtml(quote);
										}
									});
								},
								event: 'initialize'
							}
						]
					}
				]
			},
			{
				xtype: 'container',
				flex: 1,
				itemId: 'handler',
				items: [
					{
						xtype: 'button',
						itemId: 'done',
						text: 'Done'
					}
				]
			}
		],
		listeners: [
			{
				fn: 'onOKTap',
				event: 'tap',
				delegate: '#done'
			}
		]
	},

	onOKTap: function(button, e, eOpts) {
		this.parent.pop();
	}

});