/*
 * File: app/controller/ExercisesController.js
 * Date: Mon Apr 08 2013 12:11:43 GMT+0800 (CST)
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HEART.controller.ExercisesController', {
	extend: 'Ext.app.Controller',

	config: {
		refs: {
			exercises: '#exercises',
			stressed: '#stressed'
		},

		control: {
			"#exerciseList": {
				itemtap: 'onListItemTap'
			},
			"#exercises": {
				hide: 'onExercisesHide'
			},
			"#stressed": {
				show: 'onStressedShow',
				hide: 'onStressedHide'
			}
		}
	},

	onListItemTap: function(dataview, index, target, record, e, eOpts) {
		var exercise = Ext.create('HEART.view.' + record.get("type"));
		exercise.record_data = record;
		this.getExercises().push(exercise);
	},

	onExercisesHide: function(component, eOpts) {
		this.getExercises().pop();
	},

	onStressedShow: function(component, eOpts) {
		var EMXs = Ext.getStore('EMXs');
		var count = EMXs.getAllCount();

		var index = Math.floor(count*Math.random());
		var emx = EMXs.getAt(index);

		var exercise = Ext.create('HEART.view.' + emx.get("type"));

		exercise.record_data = emx;
		this.getStressed().push(exercise);
	},

	onStressedHide: function(component, eOpts) {
		this.getStressed().pop();
	},

	launch: function() {
		this.getExercises().getNavigationBar().hide();
		this.getStressed().getNavigationBar().hide();
	}

});